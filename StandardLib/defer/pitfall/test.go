package pitfall

// defer 的相关陷阱
// https://github.com/talk-go/night/issues/636


//01:02 函数栈帧的布局
//01:46 逐步扩张与一次性分配
//03:16 call跳过去，ret又跳回来

//return赋值和返回是两个步骤，不是原子操作，如果有defer会插在两个步骤中:
//返回值赋值
//<defer语句> //可有可无
//返回值返回

// go 语言支持多返回值，索引返回值不是通过寄存器来传递的。
// 1. 匿名返回值、命名返回值
// 2. 需要了解函数栈帧的布局、返回值被赋值的时机
